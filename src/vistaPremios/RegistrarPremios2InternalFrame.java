/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistaPremios;

import ModeloLoteria.LoteriaDto;
import ModeloPremio.PremioDto;
import ModeloTipoPremio.TipoPremioDto;
import ModeloVentas.PersonaDto;
import VistaPrincipal.Principal;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlos
 */
public class RegistrarPremios2InternalFrame extends javax.swing.JInternalFrame {

    private Principal principal;
    private DefaultTableModel tabla;
    private TextAutoCompleter comboLoteria;
    private boolean estadoRegistro;

    private long totalPremio;

    private boolean validar;//este atributo indica si debe registrar un premio true registra, false premio

    //esta variable indica al frame si permite registrar pesos o bolivares
    private String monedaFrame;

    //Total acomulado de premios.
    long totalAcomuladoPremio;

    /**
     * Creates new form RegistrarPremios2InternalFrame
     */
    public RegistrarPremios2InternalFrame(Principal p) {
        initComponents();
        this.getContentPane().setBackground(Color.white);
        this.principal = p;
        this.validar = false;
        this.totalPremio = 0;
        this.totalAcomuladoPremio = 0;
        this.comboLoteria = new TextAutoCompleter(this.txtLoteria);

    }

    public void inicializarVentana() {
        this.cargarComboEmpleados();
        this.cargarComboTipoPremio();
        this.generarTabla();

    }

    public void generarTabla() {
        String tituloTabla[] = {"Loteria", "Tipo", "Valor", "Premio"};
        this.tabla = new DefaultTableModel(null, tituloTabla);
        this.tablas.setModel(tabla);
        DefaultTableCellRenderer Alinear = new DefaultTableCellRenderer();
        Alinear.setHorizontalAlignment(SwingConstants.RIGHT);
        this.tablas.getColumnModel().getColumn(3).setCellRenderer(Alinear);
        this.tablas.getColumnModel().getColumn(2).setCellRenderer(Alinear);
        this.txtTotal.setHorizontalAlignment(JTextField.RIGHT);
    }

    public void cargarComboEmpleados() {
        TextAutoCompleter text = new TextAutoCompleter(this.txtCodigo);

        ArrayList<PersonaDto> lista = this.principal.getFachada().listarPersonas();
        for (PersonaDto dto : lista) {
            text.addItem(dto.getCodigoNombre() + "");
        }
    }

    public void cargarComboLoteria() {

        this.comboLoteria.removeAll();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy/MM/dd");
        String fecha = formato.format(this.dateFecha.getDate());
        ArrayList<LoteriaDto> lista = this.principal.getFachada().listarPlanLoteriasNumero(fecha);
        if (lista.isEmpty()) {
            this.mensaje.setText("No se pueden registrar premios en la fecha porque  no existen loterias \n"
                    + "registrada con numero");
            this.estadoRegistro = false;

        } else {
            this.mensaje.setText("Puede registrar sin ningun problema premios");
            this.estadoRegistro = true;

            for (LoteriaDto dto : lista) {
                this.comboLoteria.addItem(dto.getCodigoNombre());
            }
        }
        this.txtSerial.requestFocus();

    }

    public void cargarComboTipoPremio() {
        TextAutoCompleter text = new TextAutoCompleter(this.txtTipoPremio);
        ArrayList<TipoPremioDto> lista = this.principal.getFachada().listarTipoPremios();
        for (TipoPremioDto dto : lista) {
            text.addItem(dto.getTipoNombre());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablas = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        No = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        cmbMoneda = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        dateFecha = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        txtSerial = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        mensaje = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtLoteria = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTipoPremio = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTotalAcomulado = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setTitle("Registrar premio");

        jLabel7.setText("Total: ");

        txtTotal.setFont(new java.awt.Font("Arial Black", 1, 11)); // NOI18N

        tablas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablas);

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Premio"));

        No.setText("No");
        No.setEnabled(false);

        jLabel5.setText("Pagado:");

        jLabel2.setText("Personal");

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoKeyReleased(evt);
            }
        });

        cmbMoneda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bolivares", "Pesos" }));
        cmbMoneda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbMonedaKeyPressed(evt);
            }
        });

        jLabel4.setText("Moneda: ");

        jLabel1.setText("Fecha: ");

        dateFecha.setDateFormatString("dd-MM-yyyy");
        dateFecha.setDate(new Date());
        dateFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateFechaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dateFechaMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dateFechaMousePressed(evt);
            }
        });
        dateFecha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateFechaPropertyChange(evt);
            }
        });
        dateFecha.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                dateFechaInputMethodTextChanged(evt);
            }
        });
        dateFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateFechaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dateFechaKeyTyped(evt);
            }
        });
        dateFecha.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                dateFechaVetoableChange(evt);
            }
        });

        jLabel3.setText("Serial: ");

        txtSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerialActionPerformed(evt);
            }
        });
        txtSerial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSerialFocusGained(evt);
            }
        });
        txtSerial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSerialKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSerialKeyReleased(evt);
            }
        });

        mensaje.setColumns(20);
        mensaje.setForeground(new java.awt.Color(255, 0, 51));
        mensaje.setRows(5);
        jScrollPane3.setViewportView(mensaje);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(No, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSerial, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtSerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cmbMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(No, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Detalle premio"));

        jLabel8.setText("Loteria:");

        txtLoteria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLoteriaKeyPressed(evt);
            }
        });

        jLabel9.setText("Tipo:");

        txtTipoPremio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTipoPremioKeyPressed(evt);
            }
        });

        jLabel10.setText("Valor:");

        txtValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtValorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtLoteria, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTipoPremio, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLoteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTipoPremio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jLabel6.setText("Total acomulado: ");

        txtTotalAcomulado.setFont(new java.awt.Font("Arial Black", 1, 11)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalAcomulado)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalAcomulado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerialActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtSerialActionPerformed

    private void txtSerialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSerialKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            this.txtCodigo.requestFocus();
            SimpleDateFormat formato = new SimpleDateFormat("yyyy/MM/dd");
            String fecha = formato.format(this.dateFecha.getDate());
            String serial = this.txtSerial.getText();
            this.generarTabla();
            this.totalPremio = 0;
            this.txtTotal.setText("");
            this.validar = false;
            this.vaciarCamposPremios();
            this.vaciarCamposDetPremio();

        }
    }//GEN-LAST:event_txtSerialKeyPressed

    private void cmbMonedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbMonedaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtLoteria.requestFocus();
        }
    }//GEN-LAST:event_cmbMonedaKeyPressed

    private void txtLoteriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLoteriaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            this.txtTipoPremio.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            this.txtSerial.requestFocus();
        }
    }//GEN-LAST:event_txtLoteriaKeyPressed

    private void txtTipoPremioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTipoPremioKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtValor.requestFocus();
        }
    }//GEN-LAST:event_txtTipoPremioKeyPressed

    private void txtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.cmbMoneda.requestFocus();
        }
    }//GEN-LAST:event_txtCodigoKeyPressed

    private void txtValorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            SimpleDateFormat formato = new SimpleDateFormat("yyyy/MM/dd");
            String fecha = formato.format(this.dateFecha.getDate());
            String v[] = this.txtLoteria.getText().split("-");
            int codigo = Integer.parseInt(v[0]);
            boolean valor = this.principal.getFachada().validarLoteriaJugada(codigo, fecha);
            if (!valor) {
                JOptionPane.showMessageDialog(null, "No puede realizar el registro");
                this.txtValor.requestFocus();
                return;

            }

            if (this.tablas.getRowCount() > 0) {
                if (this.monedaFrame.equals(this.cmbMoneda.getSelectedItem())) {
                    this.registrar();
                    this.txtLoteria.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(null, "´Para cambiar el tipo de moneda debe salir de la ventana \n"
                            + "esto se debe a que ya ha registrado un premio en la ventana \n"
                            + "con un tipo de moneda diferente");
                }
            } else {
                this.registrar();
                this.monedaFrame = this.cmbMoneda.getSelectedItem().toString();
                this.txtLoteria.requestFocus();

            }
        }
    }//GEN-LAST:event_txtValorKeyPressed

    private void txtValorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyTyped
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorKeyTyped

    private void txtSerialFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSerialFocusGained
        // TODO add your handling code here:   

        this.txtSerial.setText("");
    }//GEN-LAST:event_txtSerialFocusGained

    private void txtSerialKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSerialKeyReleased
        // TODO add your handling code here:
        String cadena = (this.txtSerial.getText()).toUpperCase();
        this.txtSerial.setText(cadena);
    }//GEN-LAST:event_txtSerialKeyReleased

    private void txtCodigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtCodigoKeyReleased

    private void txtValorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyReleased
        // TODO add your handling code here:
        if (!this.txtValor.getText().isEmpty()) {
            NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtValor.getText().replace(".", "");
            this.txtValor.setText(formatoNumero.format(Integer.parseInt(cadena)));
        }
    }//GEN-LAST:event_txtValorKeyReleased

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void dateFechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateFechaKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_dateFechaKeyPressed

    private void dateFechaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateFechaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFechaMouseClicked

    private void dateFechaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateFechaPropertyChange
        // TODO add your handling code here:
        this.cargarComboLoteria();

    }//GEN-LAST:event_dateFechaPropertyChange

    private void dateFechaVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_dateFechaVetoableChange
        // TODO add your handling code here:

    }//GEN-LAST:event_dateFechaVetoableChange

    private void dateFechaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateFechaMousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_dateFechaMousePressed

    private void dateFechaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_dateFechaInputMethodTextChanged
        // TODO add your handling code here

    }//GEN-LAST:event_dateFechaInputMethodTextChanged

    private void dateFechaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateFechaMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_dateFechaMouseEntered

    private void dateFechaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateFechaKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_dateFechaKeyTyped

    private void registrar() {
        if (!this.validarCampos()) {
            this.generarRegistro();
        } else {
            JOptionPane.showMessageDialog(null, "No puede dejar campos  vacios");
        }

    }

    /**
     * genera el registro del premio
     */
    private void generarRegistro() {
        if (validar) {
            //solo agregar
            System.out.println("entre a agregar");
            this.agregarDetPremio();
        } else {
            //registra primera vez
            this.registrarPrimeraVez();
            System.out.println("entre a registrar");
            this.validar = true;
        }
    }

    private void registrarPrimeraVez() {

        PremioDto dto = this.retornarDatosPremio();
        dto.getDetPremio().setPremio(this.principal.getFachada().calcularPremio(dto));
        boolean valor = this.principal.getFachada().registrarPremio(dto);

        if (!valor) {
            JOptionPane.showMessageDialog(null, "Ya existe un premio registrado con ese serial.");
        } else {
            this.llenarTabla(dto);
            this.vaciarCamposDetPremio();
        }
    }

    private void agregarDetPremio() {

        PremioDto dto = this.retornarDatosPremio();
        dto.getDetPremio().setPremio(this.principal.getFachada().calcularPremio(dto));
        boolean valor = this.principal.getFachada().agregarDetPremio(dto);
        if (!valor) {
            JOptionPane.showMessageDialog(null, "Ya existe un premio registrado con ese serial.");
        } else {

            this.llenarTabla(dto);
            this.vaciarCamposDetPremio();
        }

    }

    private void vaciarCamposDetPremio() {
        this.txtLoteria.setText("");
        this.txtTipoPremio.setText("");
        this.txtValor.setText("");
    }

    private void vaciarCamposPremios() {
        this.txtCodigo.setText("");
    }

    /**
     * metodo que realiza un registro a la tabla.
     *
     * @param dto registro
     */
    private void llenarTabla(PremioDto dto) {
        this.totalPremio += dto.getDetPremio().getPremio();
        //voy llenando el acomulado de todos los premios.
        this.totalAcomuladoPremio += dto.getDetPremio().getPremio();

        NumberFormat formatoNumero = NumberFormat.getNumberInstance();

        this.txtTotal.setText(formatoNumero.format(this.totalPremio));
        this.txtTotalAcomulado.setText(formatoNumero.format(this.totalAcomuladoPremio));
        this.tabla.fireTableDataChanged();
        String registro[] = new String[4];
        registro[0] = dto.getDetPremio().getLoteria().getCodigoNombre() + "";
        registro[1] = dto.getDetPremio().getTipoPremio().getTipoNombre() + "";
        registro[2] = dto.getDetPremio().getValorFormato() + "";
        registro[3] = dto.getDetPremio().getPremioFormato() + "";

        this.tabla.addRow(registro);
        this.tabla.fireTableDataChanged();

    }

    /**
     * saca los datos de la pantalla para enviarlos a la fachada
     *
     * @return
     */
    private PremioDto retornarDatosPremio() {

        SimpleDateFormat formato = new SimpleDateFormat("yyyy/MM/dd");
        String fecha = formato.format(this.dateFecha.getDate());
        PremioDto dto = new PremioDto();
        dto.setFecha(fecha);
        dto.setSerial(this.txtSerial.getText());
        dto.getPersona().setCodigoNombre(this.txtCodigo.getText());
        dto.setMoneda(this.cmbMoneda.getSelectedItem().toString());
        dto.setPagado("No");
        String valor = this.txtValor.getText().replace(".", "");
        dto.getDetPremio().setValor(Integer.parseInt(valor));
        String v[] = this.txtLoteria.getText().split("-");
        ArrayList<LoteriaDto> lista = this.principal.getFachada().listarLoteriaXCodigo(Integer.parseInt(v[0]));
        if (!lista.isEmpty()) {
            dto.getDetPremio().setLoteria(lista.get(0));
        }
        dto.getDetPremio().getTipoPremio().setTipoNombre(this.txtTipoPremio.getText());
        System.out.println(dto.getPersona().getCodigo());
        return dto;
    }

    /**
     * retorna verdadero si existe un campo vacio y falso si todos estan llenos
     *
     * @return
     */
    private boolean validarCampos() {
        return (this.txtSerial.getText().isEmpty() || this.txtCodigo.getText().isEmpty()
                || this.txtLoteria.getText().isEmpty() || this.txtTipoPremio.getText().isEmpty() || this.txtValor.getText().isEmpty() || this.dateFecha.getDate() == null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField No;
    private javax.swing.JComboBox cmbMoneda;
    private com.toedter.calendar.JDateChooser dateFecha;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea mensaje;
    private javax.swing.JTable tablas;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtLoteria;
    private javax.swing.JTextField txtSerial;
    private javax.swing.JTextField txtTipoPremio;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtTotalAcomulado;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
