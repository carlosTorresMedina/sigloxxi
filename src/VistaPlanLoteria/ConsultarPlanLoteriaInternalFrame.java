/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VistaPlanLoteria;

import ModeloLoteria.LoteriaDto;
import ModeloPlanLoteria.PlanLoteriaDto;
import VistaPrincipal.Principal;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlos
 */
public class ConsultarPlanLoteriaInternalFrame extends javax.swing.JInternalFrame {

    private Principal principal;
    private DefaultTableModel tabla;
    private int filaSeleccionada;//utilizada para modificar

    /**
     * Creates new form ConsultarPlanLoteriaInternalFrame
     */
    public ConsultarPlanLoteriaInternalFrame(Principal p) {
        initComponents();
        this.getContentPane().setBackground(Color.white);
        this.principal = p;
        String tituloTabla[] = {"codigo", "loteria", "fecha", "cierre", "numero", "serie", "escrutado", "cerrado"};
        this.tabla = new DefaultTableModel(null, tituloTabla);
        this.tableConsulta.setModel(tabla);
        this.acomodarFecha();

    }

    private void acomodarFecha() {
        Date hoy = new Date();
        this.dateFecha.setDate(hoy);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableConsulta = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtLoteria = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtHora = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtMinuto = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        cmdFecha = new javax.swing.JButton();
        dateFecha = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        btnConsultar = new javax.swing.JButton();
        txtConsultar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtLoteriaEscrutar = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCierre = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        txtSerie = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        cmdGrabar = new javax.swing.JButton();

        setTitle("Consultar plan loteria");

        tableConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Loteria", "Fecha", "Cierre", "Numero", "Serie", "Escrutado", "Cerrado"
            }
        ));
        tableConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableConsultaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tableConsultaMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(tableConsulta);

        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Total : ");

        txtTotal.setEnabled(false);
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Seccion modifcar"));

        jLabel4.setText("Loteria: ");

        txtLoteria.setEnabled(false);

        jLabel5.setText("Hora: ");

        txtHora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHoraKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHoraKeyTyped(evt);
            }
        });

        jLabel6.setText("Minuto: ");

        txtMinuto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMinutoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMinutoKeyTyped(evt);
            }
        });

        jButton1.setText("Modificar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Fecha: ");

        txtFecha.setEnabled(false);
        txtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLoteria, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtLoteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Valores consulta"));

        cmdFecha.setText("Consultar por fecha");
        cmdFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdFechaActionPerformed(evt);
            }
        });

        dateFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateFechaMouseClicked(evt);
            }
        });
        dateFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateFechaKeyPressed(evt);
            }
        });

        jLabel2.setText("Fecha:");

        btnConsultar.setText("Consultar por codigo");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        txtConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultarActionPerformed(evt);
            }
        });
        txtConsultar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConsultarKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtConsultarKeyTyped(evt);
            }
        });

        jLabel1.setText("Codigo:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(btnConsultar)
                        .addComponent(txtConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(cmdFecha)
                    .addComponent(dateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Proceso de escrutinio"));

        jLabel8.setText("Loteria: ");

        txtLoteriaEscrutar.setEnabled(false);

        jLabel9.setText("Fecha: ");

        txtCierre.setEnabled(false);
        txtCierre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCierreActionPerformed(evt);
            }
        });

        jLabel10.setText("Numero:");

        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
        });

        txtSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerieActionPerformed(evt);
            }
        });
        txtSerie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSerieKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSerieKeyTyped(evt);
            }
        });

        jLabel11.setText("Serie:");

        jButton3.setText("Escrutar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        cmdGrabar.setText("Grabar");
        cmdGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGrabarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLoteriaEscrutar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCierre, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdGrabar, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtLoteriaEscrutar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtCierre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdGrabar)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtConsultarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.consultarLoteria();
        }
    }//GEN-LAST:event_txtConsultarKeyPressed

    private void txtConsultarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultarKeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }

    }//GEN-LAST:event_txtConsultarKeyTyped

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        // TODO add your handling code here:
        this.consultarLoteria();
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void consultarLoteria() {
        ArrayList<LoteriaDto> lista = new ArrayList();

        if (this.txtConsultar.getText().equals("")) {
            this.txtTotal.setText("0");
            return;
        }

        this.tabla.setRowCount(0);
        this.tabla.fireTableDataChanged();

        int codigo = Integer.parseInt(this.txtConsultar.getText());
        lista = this.principal.getFachada().listarLoteriaXCodigo(codigo);
        System.out.println(lista.size());

        this.adicionarATabla(lista);

    }

    private void adicionarATabla(ArrayList<LoteriaDto> lista) {
        String registro[] = new String[8];

        for (LoteriaDto dto : lista) {
            dto = this.principal.getFachada().consultarPlanLoteriaXLoteria(dto);
            for (PlanLoteriaDto plan : dto.getPlanLoterias()) {
                registro[0] = dto.getCodigo() + "";
                registro[1] = dto.getNombre() + "";
                registro[2] = plan.getFecha() + "";
                registro[3] = plan.getCierre() + "";
                registro[4] = plan.getNumero() + "";
                registro[5] = plan.getSerie() + "";
                registro[6] = plan.getEscrutado() + "";
                registro[7] = plan.getCerrado() + "";
                System.out.println("ADCION" + plan.getCierre());
                this.tabla.addRow(registro);
                this.tabla.fireTableDataChanged();

            }
            this.txtTotal.setText(dto.getPlanLoterias().size() + "");
        }
    }


    private void tableConsultaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableConsultaMouseClicked
        // TODO add your handling code here:
        if (this.tableConsulta.getSelectedRow() >= 0) {
            this.filaSeleccionada = this.tableConsulta.getSelectedRow();
            int seleccion = this.ventana();
            String escrutado = this.tableConsulta.getValueAt(this.tableConsulta.getSelectedRow(), 6).toString();

            if (escrutado.equalsIgnoreCase("S")) {
                JOptionPane.showMessageDialog(null, "No se puede realizar ninguna accion debido\n"
                        + "que el plan loteria ya fue escrutado");
                return;
            }
            String fechaHora = this.tableConsulta.getValueAt(this.tableConsulta.getSelectedRow(), 3).toString();
            Date hoy = new Date();
            Date fecha = this.generarFechaHora(fechaHora);
            if (hoy.compareTo(fecha) <= 0) {
                if (seleccion == 2) {
                    this.eliminarPlanLoteria();
                }
                if (seleccion == 1) {
                    this.modificarPlanLoteria();
                }
                if (seleccion == 0) {
                    JOptionPane.showMessageDialog(null, "No se puede procesar debido a que no ha pasado la fecha\n "
                            + "de cierre del plan loteria");
                }
            } else {
                if (seleccion == 0) {
                    this.prepararProcesoEscrutinio();
                    return;
                }
                if (seleccion == 2 || seleccion == 1) {
                    JOptionPane.showMessageDialog(null, "El plan loteria ya no se puede modificar/eliminar \n"
                            + "debido a que ya paso la fecha");
                }

            }
        }
    }//GEN-LAST:event_tableConsultaMouseClicked

    /**
     * prepara el proceo de escrutinio del plan loteria
     */
    private void prepararProcesoEscrutinio() {
        //preparo las variables 

        int codigo = Integer.parseInt(this.tableConsulta.getValueAt(this.tableConsulta.getSelectedRow(), 0).toString());
        String loteria = this.tableConsulta.getValueAt(this.tableConsulta.getSelectedRow(), 1).toString();
        String fechaHora = this.tableConsulta.getValueAt(this.tableConsulta.getSelectedRow(), 3).toString();
        this.txtLoteriaEscrutar.setText(codigo + "-" + loteria);
        this.txtCierre.setText(fechaHora);
        String numero = this.tableConsulta.getValueAt(this.tableConsulta.getSelectedRow(), 4).toString();
        String serie = this.tableConsulta.getValueAt(this.tableConsulta.getSelectedRow(), 5).toString();
        if (!numero.isEmpty()) {
            this.txtNumero.setText(numero);
            this.txtSerie.setText(serie);
            this.cmdGrabar.setEnabled(false);
            this.txtNumero.setEnabled(false);
            this.txtSerie.setEnabled(false);
        } else {
            this.txtNumero.requestFocus();
            this.cmdGrabar.setEnabled(true);
            this.txtNumero.setEnabled(true);
            this.txtSerie.setEnabled(true);

        }

    }

    private Date generarFechaHora(String fechaHora) {
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd HH:mm");
        Date fechaDate = null;
        try {
            fechaDate = formato.parse(fechaHora);
        } catch (ParseException ex) {
            System.out.println(ex);
        }
        return fechaDate;
    }

    private void modificarPlanLoteria() {
        int codigo = Integer.parseInt(this.tableConsulta.getValueAt(this.tableConsulta.getSelectedRow(), 0).toString());
        String loteria = this.tableConsulta.getValueAt(this.tableConsulta.getSelectedRow(), 1).toString();
        this.txtHora.requestFocus();
        this.txtLoteria.setText(codigo + "-" + loteria);
        String fechaHora = this.tableConsulta.getValueAt(this.tableConsulta.getSelectedRow(), 3).toString();
        String v[] = fechaHora.split(" ");
        System.out.println(v[1]);
        String horaMinuto[] = v[1].split(":");
        this.txtHora.setText(horaMinuto[0]);
        this.txtMinuto.setText(horaMinuto[1]);
        this.txtFecha.setText(this.tableConsulta.getValueAt(this.tableConsulta.getSelectedRow(), 2).toString());

    }

    private void eliminarPlanLoteria() {
        int codigo = Integer.parseInt(this.tableConsulta.getValueAt(this.tableConsulta.getSelectedRow(), 0).toString());
        String fecha = this.tableConsulta.getValueAt(this.tableConsulta.getSelectedRow(), 2).toString();

        boolean valor = this.principal.getFachada().eliminarPlanLoteria(codigo, fecha);
        if (valor) {

            this.tabla.removeRow(this.tableConsulta.getSelectedRow());
            this.txtTotal.setText(this.tableConsulta.getRowCount() + "");
        } else {
            JOptionPane.showMessageDialog(null, "existe un error al eliminar\n"
                    + "el plan loteria");

        }
    }

    private int ventana() {
        int seleccion = JOptionPane.showOptionDialog(
                rootPane,
                "Seleccione la accion que desea hacer ",
                "Selector de opciones ",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                new Object[]{"Proceso escrutinio", "Modificar hora", " Eliminar", "Cancelar"},
                "opcion");
        return seleccion;
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultarActionPerformed

    private void cmdFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdFechaActionPerformed
        // TODO add your handling code here:
        this.consultarLoteriaxFecha();
    }//GEN-LAST:event_cmdFechaActionPerformed

    private void dateFechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateFechaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.consultarLoteriaxFecha();
        }
    }//GEN-LAST:event_dateFechaKeyPressed

    private void dateFechaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateFechaMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_dateFechaMouseClicked

    private void txtHoraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHoraKeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();
        if (num < '0' || num > '9') {
            evt.consume();
        } else {
            // TODO add your handling code here:
            if (txtHora.getText().length() == 2) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
        }
    }//GEN-LAST:event_txtHoraKeyTyped

    private void txtMinutoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMinutoKeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();
        if (num < '0' || num > '9') {
            evt.consume();
        } else {
            // TODO add your handling code here:
            if (txtMinuto.getText().length() == 2) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
        }
    }//GEN-LAST:event_txtMinutoKeyTyped

    private void txtHoraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHoraKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            this.txtMinuto.requestFocus();
        }
    }//GEN-LAST:event_txtHoraKeyPressed

    private void txtMinutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMinutoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.modificar();
        }
    }//GEN-LAST:event_txtMinutoKeyPressed

    private void txtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.modificar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtCierreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCierreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCierreActionPerformed

    private void txtNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            this.txtSerie.requestFocus();
        }
    }//GEN-LAST:event_txtNumeroKeyPressed

    private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        } else {
            // TODO add your handling code here:
            if (txtNumero.getText().length() == 4) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
        }
    }//GEN-LAST:event_txtNumeroKeyTyped

    private void txtSerieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSerieKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.grabar();
        }
    }//GEN-LAST:event_txtSerieKeyPressed

    private void txtSerieKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSerieKeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtSerieKeyTyped

    private void cmdGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGrabarActionPerformed
        // TODO add your handling code here:
        //obtengo las variables
        this.grabar();

    }//GEN-LAST:event_cmdGrabarActionPerformed

    private void grabar() {
        String loteria = this.txtLoteriaEscrutar.getText();
        String fechaHora = this.txtCierre.getText();
        String numero = this.txtNumero.getText();
        String serie = this.txtSerie.getText();
        PlanLoteriaDto dto = new PlanLoteriaDto();
        dto.setCodigoNombreLoteria(loteria);
        dto.setFechaHora(fechaHora);
        dto.setNumero(numero);
        dto.setSerie(serie);
        dto.setCerrado("S");
        if (serie.isEmpty() || numero.isEmpty()) {
            return;
        }
        if (numero.length() != 4) {
            JOptionPane.showMessageDialog(null, "El numero debe ser de 4 digitos");
            return;
        }
        boolean valor = this.principal.getFachada().registrarNumeroSeriePlanLoteria(dto);
        if (valor) {
            JOptionPane.showMessageDialog(null, "El numero y  serie se registraron correctamente");
            this.tableConsulta.setValueAt(numero, this.filaSeleccionada, 4);
            this.tableConsulta.setValueAt(serie, this.filaSeleccionada, 5);
            this.tableConsulta.setValueAt("S", this.filaSeleccionada, 7);
            this.txtNumero.setEnabled(false);
            this.txtSerie.setEnabled(false);
            this.cmdGrabar.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "Error en el registro");
        }
    }

    private void txtSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerieActionPerformed

    private void tableConsultaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableConsultaMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tableConsultaMouseEntered

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (!this.cmdGrabar.isEnabled()) {
            String loteria = this.txtLoteriaEscrutar.getText();
            String fechaHora = this.txtCierre.getText();
            String numero = this.txtNumero.getText();
            String serie = this.txtSerie.getText();
            PlanLoteriaDto dto = new PlanLoteriaDto();
            dto.setCodigoNombreLoteria(loteria);
            dto.setFechaHora(fechaHora);
            dto.setNumero(numero);
            dto.setSerie(serie);
            dto.setCerrado("S");
            dto.setEscrutado("S");
            boolean valor = this.principal.getFachada().escrutarLoteria(dto);
            if (valor) {
                JOptionPane.showMessageDialog(null, "El plan loteria se escruto correctamente");
                this.principal.getFachada().actualizarProcesoEscrutinio(dto);
                this.tableConsulta.setValueAt("S", this.filaSeleccionada, 6);

                this.vaciarCamposProcesoEscrutinio();
            } else {
                JOptionPane.showMessageDialog(null, "Error al escrutar el plan loteria");
            }
        } else {
            JOptionPane.showMessageDialog(null, "El plan loteria no se puede escrutar\n debido que el numero no se ha grabado");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void modificar() {

        if (Integer.parseInt(this.txtHora.getText()) > 23 || Integer.parseInt(this.txtHora.getText()) < 0) {
            JOptionPane.showMessageDialog(null, "Valor no valido en la hora");
            return;
        }

        if (Integer.parseInt(this.txtMinuto.getText()) > 59 || Integer.parseInt(this.txtMinuto.getText()) < 0) {
            JOptionPane.showMessageDialog(null, "Valor no valido en los mintos");
            return;
        }

        String v[] = this.txtLoteria.getText().split("-");
        int codigo = Integer.parseInt(v[0]);
        int hora = Integer.parseInt(this.txtHora.getText());
        int minuto = Integer.parseInt(this.txtMinuto.getText());
        String fechaL = this.txtFecha.getText();
        SimpleDateFormat formatoDelTexto = new SimpleDateFormat("yyyy-MM-dd");

        Date cierre = null;
        Date hoy = new Date();
        try {
            cierre = formatoDelTexto.parse(fechaL);
            cierre.setHours(hora);
            cierre.setMinutes(minuto);
        } catch (ParseException ex) {
            Logger.getLogger(LoteriaDto.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (hoy.compareTo(cierre) > 0) {
            JOptionPane.showMessageDialog(null, "No se puede modificar a una fecha anterior");
            return;
        }
        SimpleDateFormat formato2 = new SimpleDateFormat("yyyy-MM-dd HH:mm");
        String fechaHora = formato2.format(cierre);
        boolean valor = this.principal.getFachada().ModificarHoraFechaPlanLoteria(codigo, fechaL, fechaHora);
        if (valor) {
            JOptionPane.showMessageDialog(null, "Modificacion exitosa");
            this.vaciarCamposModificar();
            this.tableConsulta.setValueAt(fechaHora, this.filaSeleccionada, 3);
        } else {
            JOptionPane.showMessageDialog(null, "Existe un error al modificar");
        }
    }

    private void vaciarCamposModificar() {
        this.txtLoteria.setText("");
        this.txtFecha.setText("");
        this.txtHora.setText("");
        this.txtMinuto.setText("");
    }

    private void vaciarCamposProcesoEscrutinio() {

        this.txtFecha.setText("");
        this.txtCierre.setText("");
        this.txtLoteriaEscrutar.setText("");
        this.txtNumero.setText("");
        this.txtSerie.setText("");
        this.txtNumero.setEnabled(true);
        this.txtSerie.setEnabled(true);
        this.cmdGrabar.setEnabled(true);

    }

    public void consultarPlanLoterias() {
        this.tabla.setRowCount(0);
        this.tabla.fireTableDataChanged();
        ArrayList<LoteriaDto> lista = new ArrayList();
        Date hoy = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy/MM/dd");
        String fechaHoy = formato.format(hoy);
        lista = this.principal.getFachada().listarPlanLoteriaXFecha(fechaHoy);

        this.vaciarCamposModificar();
        this.vaciarCamposProcesoEscrutinio();
        this.txtNumero.setEnabled(true);
        this.txtSerie.setEnabled(true);
        this.cmdGrabar.setEnabled(true);

        this.adicionarTablaNormal(lista);
    }

    private void consultarLoteriaxFecha() {
        ArrayList<LoteriaDto> lista = new ArrayList();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy/MM/dd");
        String fecha = formato.format(this.dateFecha.getDate());
        this.tabla.setRowCount(0);
        this.tabla.fireTableDataChanged();
        lista = this.principal.getFachada().listarPlanLoteriaXFecha(fecha);
        this.adicionarTablaNormal(lista);
    }

    private void adicionarTablaNormal(ArrayList<LoteriaDto> lista) {
        String registro[] = new String[8];
        int cantidad = 0;
        if (lista.isEmpty()) {
            this.txtTotal.setText("0");
        } else {
            for (LoteriaDto dto : lista) {
                System.out.println(dto.getCodigoNombre());
                registro[0] = dto.getCodigo() + "";
                registro[1] = dto.getNombre() + "";
                registro[2] = dto.getPlanLoterias().get(0).getFecha() + "";
                registro[3] = dto.getPlanLoterias().get(0).getCierre() + "";
                registro[4] = dto.getPlanLoterias().get(0).getNumero() + "";
                registro[5] = dto.getPlanLoterias().get(0).getSerie() + "";
                registro[6] = dto.getPlanLoterias().get(0).getEscrutado() + "";
                registro[7] = dto.getPlanLoterias().get(0).getCerrado() + "";
                this.tabla.addRow(registro);
                this.tabla.fireTableDataChanged();
                cantidad += dto.getPlanLoterias().size();
            }
            this.txtTotal.setText("" + cantidad + "");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton cmdFecha;
    private javax.swing.JButton cmdGrabar;
    private com.toedter.calendar.JDateChooser dateFecha;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableConsulta;
    private javax.swing.JTextField txtCierre;
    private javax.swing.JTextField txtConsultar;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtLoteria;
    private javax.swing.JTextField txtLoteriaEscrutar;
    private javax.swing.JTextField txtMinuto;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtSerie;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
